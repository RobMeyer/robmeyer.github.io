:root {
    --chroma-fg: #212121;
    --chroma-bg: #fff;

    @media only screen and (prefers-color-scheme: dark) {
        --chroma-fg: #e2e4e5;
        --chroma-bg: #282a36;
    }
}

.highlight {
    // Manually darkened the colors from the dark mode base16-snazzy theme
    --chroma-line-highlight-bg: #c1c0c0;
    --chroma-err: #f0534e;
    --chroma-proper-noun: #f0534e;
    --chroma-literal-string: #3ba55e;
    --chroma-line: #7f7f7f;
    --chroma-keyword: #c85498;
    --chroma-comment: #8d8d8d;
    --chroma-keyword-type: #c44234;
    --chroma-name-attribute: #46a0cc;
    --chroma-name-class: #c0c57d;
    --chroma-name-constant: #c87c35;
    --chroma-name-function: #4497c0;
    --chroma-literal-number: #cb5d51;
    --chroma-generic: #292929;
    --chroma-operator: #b14a86;

    @media (prefers-color-scheme: dark) {
        /* Dark mode colors from chromastyles base16-snazzy */
        --chroma-line-highlight-bg: #3d3f4a;
        --chroma-err: #ff5c57;
        --chroma-proper-noun: #ff5c57;
        --chroma-literal-string: #5af78e;
        --chroma-line: #7f7f7f;
        --chroma-keyword: #ff6ac1;
        --chroma-comment: #78787e;
        --chroma-keyword-type: #ff9f43;
        --chroma-name-attribute: #57c7ff;
        --chroma-name-class: #f3f99d;
        --chroma-name-constant: #ff9f43;
        --chroma-name-function: #57c7ff;
        --chroma-literal-number: #ff9f43;
        --chroma-generic: #43454f;
        --chroma-operator: #ff6ac1;
    }

    overflow-x: auto;

    /* Background */
    .bg {
        color: var(--chroma-fg);
        background-color: var(--chroma-bg);
    }

    /* PreWrapper */
    .chroma {
        color: var(--chroma-fg);
        background-color: var(--chroma-bg);
        font-size: 1.6rem;
        line-height: 1.8rem;

        /* Error */
        .err {
            color: var(--chroma-err);
        }

        /* All line-related selectors:
         * .lnlinks - LineLink
         * .lntd    - LineTableTD
         * .lntable - LineTable
         * .hl      - LineHighlight
         * .lnt     - LineNumbersTable
         * .ln      - LineNumbers
         * .line    - Line
         */
        .lnlinks {
            outline: none;
            text-decoration: none;
            color: inherit;
        }

        .lntd {
            vertical-align: top;
            padding: 0;
            margin: 0;
            border: 0;
        }

        .lntable {
            border-spacing: 0;
            padding: 0;
            margin: 0;
            border: 0;
        }

        .hl {
            background-color: var(--chroma-line-highlight-bg);
        }

        .lnt,
        .ln {
            white-space: pre;
            -webkit-user-select: none;
            user-select: none;
            margin-right: 0.4em;
            padding: 0 0.4em 0 0.4em;
            color: var(--chroma-line);
        }

        .line {
            display: flex;
        }

        /* All keyword-related selectors:
         * .k   - Keyword
         * .kc  - KeywordConstant
         * .kn  - KeywordNamespace
         * .kp  - KeywordPseudo
         * .kr  - KeywordReserved
         * .nt  - NameTag
         */
        .k,
        .kc,
        .kn,
        .kp,
        .kr,
        .nt {
            color: var(--chroma-keyword);
        }

        /* Declaration and builtin selectors:
         * .kd  - KeywordDeclaration
         * .nb  - NameBuiltin
         */
        .kd,
        .nb {
            color: var(--chroma-proper-noun);
        }

        /* KeywordType */
        .kt {
            color: var(--chroma-keyword-type);
        }

        /* Name-related selectors:
         * .na  - NameAttribute
         * .nf  - NameFunction
         */
        .na,
        .nf {
            color: var(--chroma-name-attribute);
        }

        /* NameClass */
        .nc {
            color: var(--chroma-name-class);
        }

        /* Constant and decorator selectors:
         * .no  - NameConstant
         * .nd  - NameDecorator
         */
        .no,
        .nd {
            color: var(--chroma-name-constant);
        }

        /* Variable-related selectors:
         * .nl  - NameLabel
         * .nv  - NameVariable
         * .vc  - NameVariableClass
         * .vg  - NameVariableGlobal
         * .vi  - NameVariableInstance
         */
        .nl,
        .nv,
        .vc,
        .vg,
        .vi {
            color: var(--chroma-proper-noun);
        }

        /* All string-related selectors:
         * .s   - LiteralString
         * .sa  - LiteralStringAffix  
         * .sb  - LiteralStringBacktick
         * .sc  - LiteralStringChar
         * .dl  - LiteralStringDelimiter
         * .sd  - LiteralStringDoc
         * .s2  - LiteralStringDouble
         * .s3  - LiteralStringEscape
         * .sh  - LiteralStringHeredoc
         * .si  - LiteralStringInterpol
         * .sx  - LiteralStringOther
         * .sr  - LiteralStringRegex
         * .s1  - LiteralStringSingle
         * .ss  - LiteralStringSymbol
         */
        .s,
        .sa,
        .sb,
        .sc,
        .dl,
        .sd,
        .s2,
        .s3,
        .sh,
        .si,
        .sx,
        .sr,
        .s1,
        .ss {
            color: var(--chroma-literal-string);
        }

        /* All number-related selectors:
         * .m   - LiteralNumber
         * .mb  - LiteralNumberBin
         * .mf  - LiteralNumberFloat
         * .mh  - LiteralNumberHex
         * .mi  - LiteralNumberInteger
         * .il  - LiteralNumberIntegerLong
         * .mo  - LiteralNumberOct
         */
        .m,
        .mb,
        .mf,
        .mh,
        .mi,
        .il,
        .mo {
            color: var(--chroma-literal-number);
        }

        /* Operator-related selectors:
         * .o   - Operator
         * .ow  - OperatorWord
         */
        .o,
        .ow {
            color: var(--chroma-operator);
        }

        /* All comment-related selectors:
         * .c   - Comment
         * .ch  - CommentHashbang
         * .cm  - CommentMultiline
         * .c1  - CommentSingle
         * .cs  - CommentSpecial
         * .cp  - CommentPreproc
         * .cpf - CommentPreprocFile
         */
        .c,
        .ch,
        .cm,
        .c1,
        .cs,
        .cp,
        .cpf {
            color: var(--chroma-comment);
        }

        /* All generic-related selectors:
         * .gd  - GenericDeleted
         * .ge  - GenericEmph
         * .gr  - GenericError 
         * .gh  - GenericHeading
         * .gi  - GenericInserted
         * .go  - GenericOutput
         * .gs  - GenericStrong
         * .gu  - GenericSubheading
         * .gl  - GenericUnderline
         */
        .gd,
        .gr {
            color: var(--chroma-proper-noun);
        }

        .ge,
        .gl {
            text-decoration: underline;
        }

        .gh,
        .gi,
        .gu {
            font-weight: bold;
        }

        .go {
            color: var(--chroma-generic);
        }

        .gs {
            font-style: italic;
        }
    }
}